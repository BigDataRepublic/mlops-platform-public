apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-external-secrets
  namespace: eso
  annotations:
    iam.gke.io/gcp-service-account: google-external-secrets@mlops-platform-public.iam.gserviceaccount.com
---
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: gcp-secrets-store
spec:
  provider:
    gcpsm:
      projectID: mlops-platform-public
      auth:
        workloadIdentity:
          clusterLocation: europe-west1
          clusterName: private-cluster-iap-bastion
          serviceAccountRef:
            name: k8s-external-secrets
            namespace: eso
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: iap-oauth-credentials
  namespace: istio-ingress
spec:
  refreshInterval: 5m
  secretStoreRef:
    kind: ClusterSecretStore
    name: gcp-secrets-store
  target:
    name: iap-oauth-credentials
    creationPolicy: Owner
  dataFrom:
    - extract:
        key: iap-oauth-credentials
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: mlops-platform-public-repository
  namespace: argocd
spec:
  refreshInterval: 5m
  secretStoreRef:
    kind: ClusterSecretStore
    name: gcp-secrets-store
  target:
    name: mlops-platform-public-repository
    creationPolicy: Owner
    template:
      metadata:
        labels:
          argocd.argoproj.io/secret-type: repository
  dataFrom:
    - extract:
        key: argocd-private-key
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: argocd-sso-client
  namespace: argocd
spec:
  refreshInterval: 5m
  secretStoreRef:
    kind: ClusterSecretStore
    name: gcp-secrets-store
  target:
    name: argocd-sso-client
    creationPolicy: Owner
    template:
      metadata:
        labels:
          app.kubernetes.io/part-of: argocd
  dataFrom:
    - extract:
        key: argocd-sso-client
